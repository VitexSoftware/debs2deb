#!/bin/sh
#Debs2Deb (G) 2021 VitexSoftware - put your stars here https://github.com/Vitexus/debs2deb/

set +x

VERBOSE=1

if [ -z $1 ];
then
    echo  Offline repository builder
    echo  usage:
    echo $0 DEBSDIR [pkgname]
    exit
fi

if ! type "dch" > /dev/null; then
 echo the required command "dch" not found. Please install
 echo apt install devscripts
 exit 1
fi

if ! type "debuild" > /dev/null; then
 echo the required command "debuild" not found. Please install
 echo apt install pbuilder
 exit 1
fi


DEBSDIR=$1
PKGNAME=$2

if [ -z $2 ]; 
then
	PKGNAME=$(basename $DEBSDIR | tr '[:upper:]' '[:lower:]' ) 
else 
	PKGNAME=$(echo $2 | tr '[:upper:]' '[:lower:]')
fi

STOREDIR=/var/lib/debs2deb/
PKGSDIR=${STOREDIR}${PKGNAME}
VERSION=`date +"%s"`
DEBNAME=${PKGNAME}_${VERSION}
BUILDDIR=/var/tmp/debs2deb/${DEBNAME}
INDEB_PKGSDIR=${BUILDDIR}/debian/${PKGNAME}${PKGSDIR}
INITIAL_DIR=`pwd`

mkdir -p ${BUILDDIR}/debian/tmp ${INDEB_PKGSDIR}

ALLPACKAGES=`find ${DEBSDIR}  -type f  -name '*.deb' | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/ /g'  | xargs -n1 | sort -u | xargs`

if [ $VERBOSE = 1 ]; 
then 
	echo ${ALLPACKAGES} found
fi


PACKAGESDESC=""
ONLYNAMES=""
for PKG in ${ALLPACKAGES}; do
	cp ${PKG} ${INDEB_PKGSDIR}
	cp ${PKG} ${BUILDDIR}
	ONLYNAMES="${ONLYNAMES} `basename ${PKG}| cut -d_ -f1` "
	PACKAGESDESC="${PACKAGESDESC} `basename ${PKG}`		`dpkg-deb -I ${PKG} | grep 'Description: ' | sed 's/Description://g'`
"
done

if [ $VERBOSE = 1 ]; 
then 
	echo generating ${PKGNAME}.deb from ${DEBSDIR} in ${BUILDDIR}
fi

if [ $VERBOSE = 1 ]; 
then 
	echo generating control
fi

cat > ${BUILDDIR}/debian/control << EOF
Source: ${PKGNAME}
Build-Depends: debhelper (>= 7.0.50~), coreutils, dpkg-dev, gzip, findutils
Standards-Version: 4.5.1
Maintainer: Vítězslav Dvořák <info@vitexsoftware.cz>
Uploaders: Vitex <info@vitexsoftware.cz>
Priority: optional
Homepage: https://github.com/Vitexus/offline_deb_repo/

Package: ${PKGNAME}
Recommends: gdebi-core
Architecture: all
Section: system
Priority: optional
Description: Offline Custom deb repository
 Packed packages from ${DEBSDIR}
${PACKAGESDESC}
EOF

if [ $VERBOSE = 1 ]; 
then 
	echo generating postinst
fi

cat > ${BUILDDIR}/debian/postinst << EOF
#! /bin/sh -e

case "$1" in
    configure) 	
esac

apt-get update

echo "Now you can install: ${ONLYNAMES}"
echo "#`ls ${INDEB_PKGSDIR}/*.deb | wc -l` packages fund in  local repo ${PKGNAME}"
#DEBHELPER#

EOF

if [ $VERBOSE = 1 ]; 
then 
	echo generating postrm
fi

cat > ${BUILDDIR}/debian/postrm << EOF
#! /bin/sh -e
	rm -f /etc/apt/sources.list.d/${PKGNAME}.list
	apt-get update

#DEBHELPER#

EOF

if [ $VERBOSE = 1 ]; 
then 
	echo generating rules
fi

cat > ${BUILDDIR}/debian/rules << EOF
#!/usr/bin/make -f

%:
	dh \$@

override_dh_install:
	dh_install
	mkdir -p ${INDEB_PKGSDIR}
	mkdir -p ${BUILDDIR}/debian/${PKGNAME}/etc/apt/sources.list.d/
EOF

mkdir -p ${BUILDDIR}/debian/source

echo "3.0 (native)" > ${BUILDDIR}/debian/source/format
echo "11" > ${BUILDDIR}/debian/compat

echo "*.deb	${PKGSDIR}" > ${BUILDDIR}/debian/install

#for DEB in ${ALLPACKAGES}; do
#    echo "	cp ${DEB}  ${INDEB_PKGSDIR}" >> ${BUILDDIR}/debian/rules
#done 

echo "	echo \"Remove me using: apt-get remove ${PKGNAME}\" > ${BUILDDIR}/debian/${PKGNAME}/etc/apt/sources.list.d/${PKGNAME}.list" >> ${BUILDDIR}/debian/rules
echo "	echo \"deb [trusted=yes] file://${STOREDIR} ${PKGNAME}/\" > ${BUILDDIR}/debian/${PKGNAME}/etc/apt/sources.list.d/${PKGNAME}.list" >> ${BUILDDIR}/debian/rules
echo "	dpkg-scanpackages --multiversion ${INDEB_PKGSDIR} /dev/null | sed  's#${INDEB_PKGSDIR}#${PKGNAME}#g' > ${INDEB_PKGSDIR}/Packages" >> ${BUILDDIR}/debian/rules

chmod +x ${BUILDDIR}/debian/rules



rm -f ${BUILDDIR}/debian/changelog ${BUILDDIR}/debian/changelog.dch
cd ${BUILDDIR}
dch --create -v ${VERSION} --package ${PKGNAME} "${DEBSDIR} packed "
debuild --noconf --no-lintian -i -us -uc -b

cd -
mv /var/tmp/debs2deb/${DEBNAME}_all.deb ${INITIAL_DIR}
rm -rf ${BUILDDIR}
ls -lah ${INITIAL_DIR}/${DEBNAME}_all.deb

